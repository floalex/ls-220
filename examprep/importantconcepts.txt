--Functions and Objects

--What "this" refers to

--Bind, Apply and Call
  - bind returns a new function with the original function's this keyword permanently bound to a context,
    its 'this' will never change when executed

--Use Web APIs to work with the DOM

--Understanding event driven programming for front end development
  - An event listener is a function that is told to execute when a particular event occurs.

--jQuery and the DOM (selectors, event handling, DOM manipulation and animation)
  - The find method searches for matching elements beneath the current matched element. 
    (find all the descendants from the element)
  - The filter method searches for matching elements within the current set of matched elements. 
    (use selectors like ":even" on the li element)

--HTML templating with handlebars

--Forms, serialization and deserialization

--Constructor Functions and Object Prototypes
  - constructor function is intended to be called with the "new" keyword
    1. A new object is created
    2. "this" in the function is pointed to the new object
    3. the code in the function is executed
    4. "this" is returned if there's not an explicit return
    
  - Object.create method to create an object, it can set the __proto__ property of the 
    created object to an object passed in
    - We can use Object.create to create objects that form a prototype chain
    - JavaScript searches not only in the object itself, but all the objects on its 
      prototype chain, until the end is reached
      
  - Objects created from a Function share the same prototype object.
  
  - In JavaScript every function is a Function object created from the Function 
    Constructor and as such also has a prototype (Function.prototype). 
  
--Pseudo-classical pattern and the OLOO pattern
  - Pseudo-classical: A combination of the constructor and the prototype pattern.
    - Use the constructor to set object states
    - Put shared methods on the prototype
    
  - "Object Linking to Other Objects": Define the shared behaviors on an prototype object.
    - Use Object.create() to create objects that inherit directly from that object